#
#  add_random.py
#
#  Adds or replaces random numbers in coordinate files generated by Synapse.py,
#  PointDensity.py or similar tools.
#
#  Max Larsson <m.d.larsson@medisin.uio.no>
#

__date__  = "August 11, 2010"

import glob
import optparse
import os.path
import random
import sys


def getfiles(args):
    def addfiles(fli, path, dirfiles):
        for f in dirfiles:
            fli.append(os.path.join(path, f))

    fli = []
    for f in args:
        fli.extend(glob.glob(f))
    for f in fli:
        if os.path.isdir(f):
            os.path.walk(f, addfiles, fli)
    for f in fli:
        if not os.path.isfile(f):
            fli.remove(f)
    return fli

def getoptions():
    p = optparse.OptionParser()
    p.usage = '%prog [options] files'
    p.add_option("-n", "--numberofpoints", action="store", type="int",
                 dest="numpoints", help="Number of random points to generate. "
                                        "Default is 200.")
    p.add_option("-s", "--size", action="store", type="int", nargs=2,
                 dest="size",
                 help="Width and height of simulation window supplied as two "
                      "space-separated integers. Default is 2048 2048." )
    p.add_option("-m", "--mode", action="store", type="choice", dest="mode",
                 choices=["replace", "add"],
                 help="'replace' replaces random points in input file, raising "
                      "an error if random points are not present in the file; "
                      "'add' adds random points to input file, raising an "
                      "error if random points are already present in the file."
                      " Default is 'replace'.")
    p.set_defaults(numpoints=200, size=(2048, 2048), mode="replace")
    return p.parse_args()

def getrandom(opt):
    li = []
    n = 0
    x = random.randint(0, opt.size[0] - 1)
    y = random.randint(0, opt.size[1] - 1)
    while n < opt.numpoints:
        while [x, y] in li:
            x = random.randint(0, opt.size[0] - 1)
            y = random.randint(0, opt.size[1] - 1)
        li.append([x, y])
        yield "  %d, %d\n" % (x, y)
        n += 1

def process(fn, opt):
    try:
        f = open(fn, 'r')
        s = f.readlines()
    except IOError:
        sys.stdout.write("Error: could not read %s\n" % fn)
        return
    finally:
        f.close()
    if opt.mode == "add":
        if "RANDOM_POINTS\n" in s:
            sys.stdout.write("Error: Random points already present in %s\n"
                         "  -> skipping file.\n" % fn)
            return
        else:
            sys.stdout.write("Adding random points to %s: " % fn)
            s.extend(["RANDOM_POINTS\n", "END\n"])
    elif opt.mode == "replace":
        if "RANDOM_POINTS\n" not in s:
            sys.stdout.write("Error: Random points not found in %s\n"
                             "  -> skipping file.\n" % fn)
            return
        else:
            sys.stdout.write("Replacing random points in %s: " % fn)
    start = s.index("RANDOM_POINTS\n")
    for i, e in enumerate(s[start:]):
        if e == "END\n":
            end = start + i
            break
    del s[start+1:end]
    for e in getrandom(opt):
        s.insert(start+1, e)
    try:
        f = open(fn, "w")
        f.writelines(s)
    except IOError:
        sys.stdout.write("Error: could not write to %s\n" % fn)
        return
    finally:
        f.close()
    sys.stdout.write("OK\n")


# main
opt, args = getoptions()
sys.stdout.write("Options specified:\n")
sys.stdout.write("  Mode: %s\n" % opt.mode )
sys.stdout.write("  Number of points: %d\n" % opt.numpoints)
sys.stdout.write("  Window width: %d\n" % opt.size[0])
sys.stdout.write("  Window height: %d\n" % opt.size[1])
sys.stdout.write("\n")
fli = getfiles(args)
if fli == []:
    sys.stdout.write("No files.\n")
else:
    for fn in fli:
        process(fn, opt)
